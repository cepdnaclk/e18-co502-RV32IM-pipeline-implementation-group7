$date
	Fri Apr 21 23:40:39 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 ! \regFile[0] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 " \regFile[1] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 # \regFile[2] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 $ \regFile[3] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 % \regFile[4] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 & \regFile[5] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 ' \regFile[6] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 ( \regFile[7] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 ) \regFile[8] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 * \regFile[9] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 + \regFile[10] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 , \regFile[11] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 - \regFile[12] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 . \regFile[13] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 / \regFile[14] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 0 \regFile[15] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 1 \regFile[16] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 2 \regFile[17] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 3 \regFile[18] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 4 \regFile[19] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 5 \regFile[20] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 6 \regFile[21] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 7 \regFile[22] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 8 \regFile[23] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 9 \regFile[24] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 : \regFile[25] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 ; \regFile[26] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 < \regFile[27] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 = \regFile[28] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 > \regFile[29] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 ? \regFile[30] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module myregfile $end
$var reg 32 @ \regFile[31] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$var wire 32 A OUT2 [31:0] $end
$var wire 32 B OUT1 [31:0] $end
$var reg 1 C CLK $end
$var reg 32 D IN [31:0] $end
$var reg 5 E INADDRESS [4:0] $end
$var reg 5 F OUT1ADDRESS [4:0] $end
$var reg 5 G OUT2ADDRESS [4:0] $end
$var reg 1 H RESET $end
$var reg 1 I WRITE $end
$scope module myregfile $end
$var wire 1 C CLK $end
$var wire 32 J IN [31:0] $end
$var wire 5 K INADDRESS [4:0] $end
$var wire 5 L OUT1ADDRESS [4:0] $end
$var wire 5 M OUT2ADDRESS [4:0] $end
$var wire 1 H RESET $end
$var wire 1 I WRITE $end
$var reg 32 N OUT1 [31:0] $end
$var reg 32 O OUT2 [31:0] $end
$var integer 32 P i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 P
bx O
bx N
bx M
bx L
bx K
bx J
0I
0H
bx G
bx F
bx E
bx D
1C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#8
0C
#10
b100 G
b100 M
b0 F
b0 L
1H
#16
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b100000 P
1C
#18
b0 A
b0 O
b0 B
b0 N
#20
0H
#24
0C
#30
1I
b1011111 D
b1011111 J
b10 E
b10 K
#32
1C
#33
b1011111 #
#40
0C
0I
#48
1C
#50
b10 F
b10 L
#52
b1011111 B
b1011111 N
#56
0C
#60
b1 F
b1 L
1I
b11100 D
b11100 J
b1 E
b1 K
#62
b0 B
b0 N
#64
1C
#65
b11100 "
#67
b11100 B
b11100 N
#70
0I
#72
0C
#80
1C
1I
b110 D
b110 J
b100 E
b100 K
#81
b110 %
#83
b110 A
b110 O
#88
0C
#90
b1111 D
b1111 J
#96
1C
#97
b1111 %
#99
b1111 A
b1111 O
#100
0I
#104
0C
#106
1I
b110010 D
b110010 J
b1 E
b1 K
#111
0I
#112
1C
#120
0C
#121
